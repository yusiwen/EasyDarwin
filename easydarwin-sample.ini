[http]
port=10008
default_username=admin
default_password=admin

[db]
; database type, supported: 'sqlite', 'mysql', default is 'sqlite'
db_type=sqlite
; database file name for 'sqlite'
db_datafile=
; database connection uri, if type is 'mysql' or 'postgres', db_uri is the connect string, such as:
;     'user:password@tcp(localhost:3306)/db?charset=utf8mb4&parseTime=True&loc=Local' for MySQL, and
;     'host=localhost user=user password=password dbname=db port=5432 sslmode=disable TimeZone=Asia/Shanghai' for Postgres
db_uri=
; database operation log level, supported: 'info', 'warn', 'error', 'silent', default is 'silent'
db_log_level=info

[codec]
; easydarwin使用ffmpeg工具。这里表示ffmpeg的可执行程序的路径
; On linux, using ffmpeg.sh for VAAPI support
; ffmpeg_binary=./ffmpeg.sh
ffmpeg_binary=d:/opt/apps/ffmpeg-4.4.1-full_build/bin/ffmpeg.exe
; generic options of ffmpeg
ffmpeg_general_options="-hide_banner -nostats -nostdin -progress -"
; list available codecs by 'ffmpeg -encoders'
; libx264     H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)
; libx264     H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB (codec h264)
; h264_amf    AMD AMF H.264 Encoder (codec h264)
; h264_nvenc  NVIDIA NVENC H.264 encoder (codec h264)
; h264_qsv    H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (Intel Quick Sync Video acceleration) (codec h264)
; nvenc       NVIDIA NVENC H.264 encoder (codec h264)
; nvenc_h264  NVIDIA NVENC H.264 encoder (codec h264)
; Default codec is 'libx264'
ffmpeg_video_codec=h264_qsv
; additional codec args used on Linux, such as:
; '-hwaccel vaapi -hwaccel_output_format vaapi -hwaccel_device /dev/dri/renderD128'
ffmpeg_video_codec_args=
; log file directory for ffmpeg, default is the same dir where executable exists
ffmpeg_log_dir=D:\\tmp
; max log file in megabytes, default 100MB
ffmpeg_log_max_size=1
; max old files to keep, default 0 (retains all old files)
ffmpeg_log_max_backups=3
; max age in days, default 0 (retains all old files)
ffmpeg_log_max_age=7
; compressed or not, default false
ffmpeg_log_compress=true

[flv]
enabled=true
embedded_server=1
log_level=trace
read_timeout=60
write_timeout=60
api_addr=:8090
stream_addr=:1935
flv_addr=:7001
hls_addr=:7002
; embedded_server=0
; api_addr=172.16.62.219:8090
; stream_addr=172.16.62.219:1935
; flv_addr=172.16.62.219:7001
; hls_addr=172.16.62.219:7002

[rtsp]
port=554

; rtsp 超时时间，包括RTSP建立连接与数据收发。
timeout=28800

; 是否使能gop cache。如果使能，服务器会缓存最后一个I帧以及其后的非I帧，以提高播放速度。但是可能在高并发的情况下带来内存压力。
gop_cache_enable=1

; 新的推流器连接时，如果已有同一个推流器（PATH相同）在推流，是否关闭老的推流器。
; 如果为0，则不会关闭老的推流器，新的推流器会被响应406错误，否则会关闭老的推流器，新的推流器会响应成功。
close_old=0

; 当close_old为1时，是否保留被关闭的推流器对应的播放器。
; 如果为0，则原推流器对应的播放器会被断开。否则会被保留下来。注意，如果该选项为1，可能某些播放器会有异常，因为RTP序列可能不一致了。
keep_players=0

; 是否使能向服务器推流或者从服务器播放时验证用户名密码. [注意] 因为服务器端并不保存明文密码，所以推送或者播放时，客户端应该输入密码的md5后的值。
; password should be the hex of md5(original password)
authorization_enable=0

[record]
;本地存储所将要保存的根目录。如果不存在，程序会尝试创建该目录。
output_dir_path=d:/tmp/output

;文件格式，默认m3u8
output_file_format=mp4

;切片文件时长。本地存储时，将以该时间段为标准来生成ts文件(该时间+一个I帧间隔)，单位秒。
;如果需要直播，这个值设小点，但是这样会产生很多ts文件；如果不需要直播，只要存储的话，可设大些。
ts_duration_second=600
